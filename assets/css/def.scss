@import "variable";
$root:1px;

@function size($px) {
    @return $px / $root * 1px;
}

@function SIZE($px) {
  @return 2 * $px / $root * 1px;
}

@mixin border($direction){
    position:relative;
    $selector : '';
    @if $direction == 'left' or $direction == 'top' {
      $selector : 'before';
    } @else if $direction == 'right' or $direction == 'bottom' {
      $selector : 'after';
    }
    @if $direction == 'left' or $direction == 'right' {
      &::#{$selector}{
        content: ' ';
        display: block;
        position:absolute;
        top:0;
        height:100%;
        width:1px;
        transform:scaleX(0.5);
        -webkit-transform:scaleX(0.5);
        background:#eee;
      }
      &::#{$selector}{
        #{$direction}:0;
      }
    }@else if $direction == 'top' or $direction == 'bottom' {
      &::#{$selector}{
        content: ' ';
        display: block;
        position:absolute;
        left:0;
        width:100%;
        height:1px;
        transform:scaleY(0.5);
        -webkit-transform:scaleY(0.5);
        background:#eee;
      }
      &::#{$selector}{
        #{$direction}:0;
      }
    }
}

@mixin border-none($direction){
    $selector : '';
    @if $direction == 'left' or $direction == 'top' {
      $selector : 'before';
    } @else if $direction == 'right' or $direction == 'bottom' {
      $selector : 'after';
    }
    &::#{$selector}{
        display: none;
    }
}

@mixin cellWrapper() {
  .cell-wrapper{
    width: 100%;
    margin-top: size(20);
    background-color: #fff;
    font-size: size(32);
    @include cell();
  }
}
@mixin cell() {
  .cell{
    -webkit-display: flex;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: space-between;
    align-items: center;
    height: size(95);
    padding: 0 size(32);
    @include border('bottom');
    .cell-value{
      color: #999999;
      font-size: size(28);
      .iconfont{
        margin-left: size(10);
        font-size: size(20);
        position: relative;
        top: size(-2)
      }
    }
  }
}
@mixin maskLayer() {
  .mask-layer{
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0);
    z-index: 999;
  }
}

@mixin txt-overflow($line:1) {
  /* 多行文本溢出 */
  overflow : hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: #{$line};
  -webkit-box-orient: vertical;
  word-wrap: break-word;
  word-break: break-all;
}

@mixin bg($url) {
  background-image: url($url);
  background-size: 100% 100%;
}

@mixin mid {
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

@function p($x) {
  // 保留两位小数
  @return percentage( floor($x * 10000) / 10000 );
}

@mixin circle($size) {
  width: size($size);
  height: size($size);
  border-radius: 50%;
}

@mixin fill{
  width: 100%;
  height: 100%;
}

@mixin flex() {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: center;
  align-items: center;
}

@mixin ellipsis() {
  overflow: hidden;
  text-overflow:ellipsis;
  white-space: nowrap;
}